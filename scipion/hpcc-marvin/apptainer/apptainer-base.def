Bootstrap: docker
From: nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04

%labels
MAINTAINER bruno.focassio@lnnano.cnpem.br
MAINTAINER joao.guerra@lnbio.cnpem.br
MAINTAINER jose.pereira@lnbio.cnpem.br
VERSION 3.8.1

%help
Base recipe for Scipion on Apptainer/Singularity image generation.

%post
# Export tz for apt so it does not block on install
export TZ='America/Sao_Paulo'
export DEBIAN_FRONTEND=noninteractive

# Add cuda lib to path
export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"

# Install dependencies
apt update
apt install -y software-properties-common lsb-release build-essential

# Utilities
apt install -y --no-install-recommends --no-install-suggests curl git less nano gedit vim wget python3-numpy python3-dev gawk bison flex unzip

# Compilation
apt install -y --no-install-recommends --no-install-suggests gcc-10 g++-10 make cmake scons default-jdk rsync

# Xmipp + Scipion libraries
apt install -y --no-install-recommends --no-install-suggests libfftw3-dev libhdf5-dev libopenmpi-dev libsqlite3-dev libtiff5-dev 

# Slurm libraries
apt install -y --no-install-recommends --no-install-suggests libmunge-dev libmunge2 munge

# ChimeraX libraries
apt-get install -y xcb libffi-dev libxcb1-dev libxkbfile-dev qtbase5-dev libglu1-mesa libcanberra-gtk-module libcanberra-gtk3-module packagekit-gtk3-module

# Create a user for SLURM
adduser slurm

# Miniforge installation
wget -q "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh" -O miniforge.sh
bash miniforge.sh -b -p /opt/miniforge3
rm miniforge.sh
ln -s /opt/miniforge3/etc/profile.d/conda.sh /etc/profile.d/conda.sh
echo ". /opt/miniforge3/etc/profile.d/conda.sh" >> $SINGULARITY_ENVIRONMENT
echo 'export PATH="/opt/miniforge3/bin:${PATH}"' >> $SINGULARITY_ENVIRONMENT
. /opt/miniforge3/etc/profile.d/conda.sh
export PATH="/opt/miniforge3/bin:${PATH}"

# Scipion installation
conda run -n base pip3 install --user scipion-installer
conda run -n base python3 -m scipioninstaller -conda -noXmipp -noAsk /scipion

# Scipion configuration
printf "\n\n" | /scipion/scipion3 config --overwrite --unattended;
sleep 5
echo "" >> /scipion/config/scipion.conf
echo "CUDA = True" >> /scipion/config/scipion.conf
echo "CUDA_BIN = /usr/local/cuda-11.8/bin" >> /scipion/config/scipion.conf
echo "CUDA_LIB = /usr/local/cuda-11.8/lib64" >> /scipion/config/scipion.conf
echo "MPI_BINDIR = /usr/bin" >> /scipion/config/scipion.conf
echo "MPI_LIBDIR = /usr/lib" >> /scipion/config/scipion.conf
echo "MPI_INCLUDE = /usr/include/" >> /scipion/config/scipion.conf
echo "OPENCV = False" >> /scipion/config/scipion.conf


# Fix for ScipionUserData folder problems
sed -i '/^SCIPION_LOG/d' /scipion/config/scipion.conf
sed -i '/^SCIPION_LOGS/d' /scipion/config/scipion.conf
sed -i '/^SCIPION_USER_DATA/d' /scipion/config/scipion.conf
echo "SCIPION_LOG = ${SCIPION_USER_DATA}/logs/scipion.log" >> /scipion/config/scipion.conf
echo "SCIPION_LOGS = ${SCIPION_USER_DATA}/logs" >> /scipion/config/scipion.conf

# Scipion font fix
/scipion/scipion3 run "conda install -y -c conda-forge tk=*=xft_*"

# Basic programs: Xmipp and ChimeraX for visualisation
/scipion/scipion3 run "conda install -y cmake=3.31"
/scipion/scipion3 installp -p scipion-em-xmipp -j 6 | tee -a install.log
# /scipion/scipion3 installb deepLearningToolkit

# List binaries
/scipion/scipion3 installb --help

# List packages
/scipion/scipion3 installp --help

ln -s /usr/lib/x86_64-linux-gnu/libffi.so /usr/lib/x86_64-linux-gnu/libffi.so.6
/scipion/scipion3 installp -p scipion-em-chimera

# Cleaning tasks for space optimisation
apt clean
apt autoclean
apt autoremove
rm -rf /var/lib/apt/lists/*
unset DEBIAN_FRONTEND

%runscript
